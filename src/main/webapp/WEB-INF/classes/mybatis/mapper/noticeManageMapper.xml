<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="noticeManage">
	<select id="seq" resultType="Long">
		SELECT notice_seq.NEXTVAL FROM dual
	</select>

	<insert id="insertNotice" parameterType="com.sp.app.admin.noticeManage.Notice">
		INSERT INTO notice(num, userId, subject, content,notice, reg_date)
		VALUES(#{num}, #{userId}, #{subject}, #{content},#{notice}, SYSDATE)
	</insert>

	<sql id="where-list">
		<if test="condition=='all' ">
			( INSTR(subject, #{keyword}) &gt; 0
				OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject' ">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content' ">
			DBMS_LOB.INSTR( content, #{keyword}) &gt; 0 
		</if>
		<if test="condition=='userName' ">
			userName=#{keyword}
		</if>
		<if test="condition=='reg_date' ">
			( TO_CHAR(reg_date, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(reg_date, 'YYYYMMDD') = #{keyword} )
		</if>
	</sql>
	
	
	
	<!-- 데이터개수  -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM notice n
		JOIN member1 m ON n.userId=m.userId
		<where>
			<if test="keyword != null and keyword!=''  ">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<!-- 리스트 -->
	<select id="listNotice" parameterType="map" resultType="com.sp.app.admin.noticeManage.Notice">
		SELECT n.num, n.userId, userName, subject, notice,
			   reg_date, NVL(fileCount, 0) fileCount
		FROM notice n
		JOIN member1 m ON n.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) fileCount FROM noticeFile
			GROUP BY num
		) f ON n.num=f.num
		<where>
			<if test="keyword != null and keyword != ''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>

    <!-- 글보기 -->
    <select id="readNotice" parameterType="Long" resultType="com.sp.app.admin.noticeManage.Notice">
		SELECT num, n.userId, userName, subject, content,notice, reg_date
		FROM notice n
		JOIN member1 m ON n.userId=m.userId 
		WHERE num = #{num}
	</select>

	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Long">
		UPDATE notice SET hitCount=hitCount+1 WHERE num = #{num}
	</update>

	<!-- 이전글 -->
	<select id="preReadNotice" parameterType="map" resultType="com.sp.app.admin.noticeManage.Notice">
		SELECT num, subject
		FROM notice n
		JOIN member1 m ON n.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
    </select>

    <!-- 다음글 -->
    <select id="nextReadNotice" parameterType="map" resultType="com.sp.app.admin.noticeManage.Notice">
		SELECT num, subject
		FROM notice n
		JOIN member1 m ON n.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
    </select>
    
	<!-- 수정 -->
	<update id="updateNotice" parameterType="com.sp.app.admin.noticeManage.Notice">
		UPDATE notice SET subject=#{subject},
			content=#{content}, notice=#{notice}
		WHERE num=#{num}
	</update>
    
	<!-- 삭제 -->
	<delete id="deleteNotice" parameterType="Long">
		DELETE FROM notice WHERE num=#{num}
	</delete>
	<!-- 파일 -->
	<insert id="insertFile" parameterType="com.sp.app.admin.noticeManage.Notice">
		INSERT INTO noticeFile(fileNum, num, saveFilename, oriFilename)
		VALUES (noticeFile_seq.NEXTVAL, #{num}, #{saveFilename},
			#{oriFilename})
	</insert>
	
	<select id="listFile" parameterType="Long" resultType="com.sp.app.admin.noticeManage.Notice">
		SELECT fileNum, num, saveFilename, oriFilename
		FROM noticeFile
		WHERE num=#{num}    
	</select>
	
	<select id="readFile" parameterType="Long" resultType="com.sp.app.admin.noticeManage.Notice">
		SELECT fileNum, num, saveFilename, oriFilename
		FROM noticeFile
	    WHERE fileNum=#{fileNum}      
	</select>
	
	<delete id="deleteFile" parameterType="map">
		DELETE FROM noticeFile WHERE ${field} = #{num}
	</delete>
</mapper>