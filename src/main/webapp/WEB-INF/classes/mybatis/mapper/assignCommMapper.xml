<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="assignComm">
	<select id="seq" resultType="Long">
		SELECT ASSIGNCOMM_SEQ.NEXTVAL FROM dual
	</select>

	<insert id="insertComm" parameterType="com.sp.app.assignComm.Community">
		INSERT INTO assignComm(num, subject, content, userId, regDate, thumbnail, zip, addr1, addr2, pNum, lat, lng) 
			VALUES(#{num}, #{subject}, #{content}, #{userId}, 
				SYSDATE, #{thumbnail}, #{zip}, #{addr1}, #{addr2}, #{pNum}, #{lat}, #{lng})
	</insert>
	
	<insert id="insertCommDetail" parameterType="com.sp.app.assignComm.Community">
		INSERT INTO assignCommDetail(num, deposit, monthly, expense, area, bFloor, floor, parking, elevator, transDate) 
			VALUES(#{num}, #{deposit}, #{monthly}, #{expense}, #{area}, #{bFloor}, #{floor}, #{parking}, #{elevator}, #{transDate})
	</insert>
	
	<insert id="insertCommImg" parameterType="com.sp.app.assignComm.Community">
		INSERT INTO assignCommImg(imgNum, num, imgName) 
			VALUES(assignCommImg_seq.NEXTVAL, #{num}, #{imgName}) 
	</insert>
	
	<update id="updateComm" parameterType="com.sp.app.assignComm.Community">
		UPDATE assignComm SET subject=#{subject}, content=#{content}, zip=#{zip}, thumbnail=#{thumbnail}, 
			addr1=#{addr1}, addr2=#{addr2}, pNum=#{pNum}, lat=#{lat}, lng=#{lng}
		WHERE num = #{num}
	</update>
	
	<update id="updateCommDetail" parameterType="com.sp.app.assignComm.Community">
		UPDATE assignCommDetail SET deposit=#{deposit}, monthly=#{monthly}, expense=#{expense}, area=#{area}, 
			bFloor=#{bFloor}, floor=#{floor}, parking=#{parking}, elevator=#{elevator}, transDate=#{transDate}
		WHERE num = #{num}
	</update>
	
	<delete id="deleteComm" parameterType="long">
		DELETE FROM assignComm 
			WHERE num = #{num}
	</delete>
	
	<select id="readComm" parameterType="long" resultType="com.sp.app.assignComm.Community">
		SELECT a.num, subject, content, userId, TO_CHAR(regDate, 'YYYY-MM-DD') AS regDate, TO_CHAR(updateDate, 'YYYY-MM-DD') AS updateDate, pNum, zip, addr1, addr2, thumbnail,
			deposit, monthly, expense, area, floor, bFloor, parking, elevator, TO_CHAR(transDate, 'YYYY-MM-DD') AS transDate, lat, lng
		FROM assignComm a
        JOIN assignCommDetail ad ON a.num = ad.num
		WHERE a.num = #{num}
	</select>
	
	<select id="readCommImg" parameterType="long" resultType="com.sp.app.assignComm.Community">
		SELECT imgNum, imgName 
		FROM assignCommImg
		WHERE num = #{num}
        ORDER BY imgNum ASC
	</select>
	
	<select id="listCommCount" resultType="long">
		SELECT NVL(COUNT(*), 0) count 
		FROM assignComm
	</select>
	
	<select id="listComm" resultType="com.sp.app.assignComm.Community">
		SELECT a.num, subject, content, userId, TO_CHAR(regDate, 'YYYY-MM-DD') AS regDate, TO_CHAR(updateDate, 'YYYY-MM-DD') AS updateDate, 
			pNum, zip, addr1, addr2, thumbnail, deposit, monthly, expense, area, bFloor, parking, elevator, TO_CHAR(transDate, 'YYYY-MM-DD') AS transDate, lat, lng
		FROM assignComm a
        JOIN assignCommDetail ad ON a.num = ad.num
        ORDER BY regDate DESC, a.num DESC
		
	</select>
	
	<select id="listCommCountMyList" parameterType="String" resultType="long">
		SELECT NVL(COUNT(*), 0) count 
		FROM assignComm
		WHERE userId = #{userId}
	</select>
	
	<select id="listCommMyList" parameterType="String" resultType="com.sp.app.assignComm.Community">
		SELECT a.num, subject, content, userId, TO_CHAR(regDate, 'YYYY-MM-DD') AS regDate, TO_CHAR(updateDate, 'YYYY-MM-DD') AS updateDate, 
			pNum, zip, addr1, addr2, thumbnail, deposit, monthly, expense, area, bFloor, parking, elevator, TO_CHAR(transDate, 'YYYY-MM-DD') AS transDate
		FROM assignComm a
        JOIN assignCommDetail ad ON a.num = ad.num
        WHERE userId = #{userId}
        ORDER BY regDate DESC
	</select>
	
	<insert id="insertNote" parameterType="com.sp.app.assignComm.Note">
		INSERT INTO note(num, senderId, receiverId, content, sendDay) 
			VALUES(NOTE_SEQ.NEXTVAL, #{senderId}, #{receiverId}, #{content}, SYSDATE)
	</insert>
	
	<select id="updateListCount" resultType="long">
		SELECT NVL(COUNT(*), 0) count 
		FROM assignComm
		WHERE lat &gt;= #{swLat, jdbcType=DOUBLE} and lat &lt;= #{neLat, jdbcType=DOUBLE} 
        		and lng &gt;= #{swLng, jdbcType=DOUBLE} and lng &lt;= #{neLng, jdbcType=DOUBLE}
	</select>
	
	<select id="updateList" parameterType="map" resultType="com.sp.app.assignComm.Community">
		SELECT a.num, subject, content, userId, TO_CHAR(regDate, 'YYYY-MM-DD') AS regDate, TO_CHAR(updateDate, 'YYYY-MM-DD') AS updateDate, 
			pNum, zip, addr1, addr2, thumbnail, deposit, monthly, expense, area, bFloor, parking, elevator, TO_CHAR(transDate, 'YYYY-MM-DD') AS transDate, lat, lng
		FROM assignComm a
        JOIN assignCommDetail ad ON a.num = ad.num
        WHERE lat &gt;= #{swLat, jdbcType=DOUBLE} and lat &lt;= #{neLat, jdbcType=DOUBLE} 
        		and lng &gt;= #{swLng, jdbcType=DOUBLE} and lng &lt;= #{neLng, jdbcType=DOUBLE}
        ORDER BY regDate DESC, a.num DESC 
	</select>
	
	<select id="detailLatLng" parameterType="map" resultType="com.sp.app.assignComm.Community">
		SELECT a.num, subject, content, userId, TO_CHAR(regDate, 'YYYY-MM-DD') AS regDate, TO_CHAR(updateDate, 'YYYY-MM-DD') AS updateDate, pNum, zip, addr1, addr2, thumbnail,
			deposit, monthly, expense, area, floor, bFloor, parking, elevator, TO_CHAR(transDate, 'YYYY-MM-DD') AS transDate, lat, lng
		FROM assignComm a
        JOIN assignCommDetail ad ON a.num = ad.num
		WHERE lat = #{lat} and lng = #{lng}
	</select>
	
</mapper>